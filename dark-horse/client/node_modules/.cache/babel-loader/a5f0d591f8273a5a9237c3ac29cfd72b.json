{"ast":null,"code":"var _jsxFileName = \"/Users/lilicohen/Desktop/Dark-Horse/dark-horse/client/src/components/Map/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport useSwr from 'swr';\nimport './map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json()); //The url currently provide is of a crime report in London lol. Once I have the user data ill be able to plug that in and change the map\n\n\nexport default function LeafMap() {\n  _s();\n\n  const url = 'https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10';\n  const {\n    data,\n    error\n  } = useSwr(url, {\n    fetcher\n  });\n  const crimes = data && !error ? data.slice(0, 300) : [];\n  return (\n    /*#__PURE__*/\n    //since this map is set to London, Ill have to change it to an object that takes in users inputs and changes with state\n    _jsxDEV(MapContainer, {\n      center: [52.6376, -1.135171],\n      zoom: 12,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        zoomToBoundsOnClick: true,\n        animate: true,\n        showCoverageOnHover: true,\n        removeOutsideVisibleBounds: true,\n        children: crimes.map(crime => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [crime.location.latitude, crime.location.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 36\n            }, this), \" Easily customizable.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, crime.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(LeafMap, \"0Md9nfe1w9EeNtTpqsFmc6MYhdg=\", false, function () {\n  return [useSwr];\n});\n\n_c = LeafMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafMap\");","map":{"version":3,"sources":["/Users/lilicohen/Desktop/Dark-Horse/dark-horse/client/src/components/Map/index.js"],"names":["React","MarkerClusterGroup","MapContainer","TileLayer","Marker","Popup","useSwr","fetcher","args","fetch","then","response","json","LeafMap","url","data","error","crimes","slice","map","crime","location","latitude","longitude","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAO,WAAP;;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAlC,CAA7B,C,CAEA;;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAMC,GAAG,GACP,6FADF;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAACQ,GAAD,EAAM;AAAEP,IAAAA;AAAF,GAAN,CAA9B;AACA,QAAMU,MAAM,GAAGF,IAAI,IAAI,CAACC,KAAT,GAAiBD,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,GAAd,CAAjB,GAAsC,EAArD;AAEA;AAAA;AACE;AACA,YAAC,YAAD;AAAc,MAAA,MAAM,EAAE,CAAC,OAAD,EAAU,CAAC,QAAX,CAAtB;AAA4C,MAAA,IAAI,EAAE,EAAlD;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC,oDADN;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,kBAAD;AACE,QAAA,mBAAmB,EAAE,IADvB;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,mBAAmB,EAAE,IAHvB;AAIE,QAAA,0BAA0B,EAAE,IAJ9B;AAAA,kBAMGD,MAAM,CAACE,GAAP,CAAYC,KAAD,iBACV,QAAC,MAAD;AAEE,UAAA,QAAQ,EAAE,CAACA,KAAK,CAACC,QAAN,CAAeC,QAAhB,EAA0BF,KAAK,CAACC,QAAN,CAAeE,SAAzC,CAFZ;AAAA,iCAIE,QAAC,KAAD;AAAA,6DACuB;AAAA;AAAA;AAAA;AAAA,oBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,WACOH,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA0BD;;GAhCuBX,O;UAGEP,M;;;KAHFO,O","sourcesContent":["import React from 'react';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport useSwr from 'swr';\nimport './map.css';\n\nconst fetcher = (...args) => fetch(...args).then((response) => response.json());\n\n//The url currently provide is of a crime report in London lol. Once I have the user data ill be able to plug that in and change the map\nexport default function LeafMap() {\n  const url =\n    'https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10';\n  const { data, error } = useSwr(url, { fetcher });\n  const crimes = data && !error ? data.slice(0, 300) : [];\n\n  return (\n    //since this map is set to London, Ill have to change it to an object that takes in users inputs and changes with state\n    <MapContainer center={[52.6376, -1.135171]} zoom={12}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <MarkerClusterGroup\n        zoomToBoundsOnClick={true}\n        animate={true}\n        showCoverageOnHover={true}\n        removeOutsideVisibleBounds={true}\n      >\n        {crimes.map((crime) => (\n          <Marker\n            key={crime.id}\n            position={[crime.location.latitude, crime.location.longitude]}\n          >\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}